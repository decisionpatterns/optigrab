% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/opt_fill.R
\name{opt_fill}
\alias{opt_fill}
\title{opt_fill}
\usage{
opt_fill(x, clobber = TRUE, create = FALSE, opts = commandArgs(),
  style = getOption("optigrab")$style)
}
\arguments{
\item{x}{recursive object to use as a template}

\item{clobber}{logical; if \code{TRUE}, existing values of \code{x} will
       be clobbered. 
\code{opt_get_these} fills a recursive structure with values from the 
command line using \code{\link{opt_get}}.}
}
\value{
(A copy of) \code{x}, with values filled from the command-line.  If 
  \code{x} is a reference structure, this is done by reference, returning 
  the object invisibly. 
  
  The result is returned invisibly.
}
\description{
Fill a recursive structure with command-line arguments
}
\details{
This is similar to \code{modifyList}, but instead using \code{x} to indicate 
which variables should be filled.
}
\examples{
  proto <- list( foo="a", bar=1 )
  
  opt_fill( proto, opts=c( '--foo', 'filled' ))
  opt_fill( proto, opts=c( '--foo', 'filled', '--bar', '-9' ))
 
  proto <- as.environment(proto)
  opt_fill( proto, opts=c( '--foo', 'env-fill', '--bar', '555' ))
  
  str( as.list(proto) )

}
\seealso{
\code{\link{opt_get}} \cr
  \code{\link[utils]{modifyList}}
}

