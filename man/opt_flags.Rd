% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/opt_flags.R
\name{opt_flags}
\alias{is.flag}
\alias{opt_flags}
\alias{which.flag}
\title{Flag functions}
\usage{
opt_flags(opts = commandArgs(), style = getOption("optigrab")$style)

is.flag(opts = commandArgs(), style = getOption("optigrab")$style)

which.flag(opts = commandArgs, style = getOption("optigrab")$style)
}
\arguments{
\item{opts}{character; vector of options (Default: \code{commandArgs()})}

\item{style}{list; list of functions that define the parsing style.}
}
\value{
\code{opt_flags} returns character.

  \code{is.flag} returns logical.

  \code{which.flag} returns numeric.

logical

numeric
}
\description{
\code{opt_flags} get the flags from the options vector.

\code{is.flag} determines if an element of a options vector is a flag (as
opposed to a value ) by checking against the option style

\code{which.flag} determines whether the options is a flag.
}
\details{
\code{opt_flags}, \code{is.flag} and \code{which.flag} are internal,
non-expected functions. It is not expected that these would be called
directly.

They are  used to extract and identify which elements of the option vector are
option flags (as opposed to option values). Options are identified by
\code{getOptions('optigrab')$style$flag_test}. By defailt, \emph{optigrab}
follows GNU-style command line arguments, i.e. those beginning with
"--" or "-" and are set at the time of package loading.
}
\examples{
opts <- c( "--foo", "bar", "-f", "-b", "text" )

  optigrab:::is.flag(opts)
  optigrab:::which.flag(opts)
  optigrab:::opt_flags(opts)
}
\seealso{
\code{\link{opt_names}} -- returns the names
}

